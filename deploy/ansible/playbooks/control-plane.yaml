---
- name: Install control plane
  hosts: k8s_masters
  remote_user: "{{ user }}"
  tasks:
#    - name: Reset Kubernetes
#      become: true
#      ansible.builtin.shell:
#        cmd: "kubeadm reset --force"
#    - name: Reset Kubernetes, clear net
#      become: true
#      ansible.builtin.shell:
#        cmd: "rm -rf /etc/cni/net.d"
    - name: Init master
      become: true
      ansible.builtin.shell:
        cmd: "kubeadm init --control-plane-endpoint=$HOSTNAME --pod-network-cidr=10.128.0.0/20 --apiserver-advertise-address=0.0.0.0 --apiserver-cert-extra-sans="
    - name: setup admin user
      ansible.builtin.shell:
        cmd: "mkdir -p $HOME/.kube && yes | sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config && sudo chown $(id -u):$(id -g) $HOME/.kube/config"
    - name: Copy admin.conf to su folder
      become: true
      ansible.builtin.shell:
        cmd: "cp /etc/kubernetes/admin.conf /root/.kube/config"
      ignore_errors: true
    - name: Get the token for joining the worker nodes
      become: yes
      ansible.builtin.shell:
        cmd: "kubeadm token create  --print-join-command"
      register: kubernetes_join_command
    - debug:
        msg: "{{ kubernetes_join_command.stdout }}"
    - name: Copy join command to local file.
      become: yes
      local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="kubernetes_join_command" mode=0777
    - name: Create tigera namespace
      ansible.builtin.shell:
        cmd: "kubectl create namespace tigera-operator"
    - name: Add tigera repo
      ansible.builtin.shell:
        cmd: "helm repo add projectcalico https://docs.tigera.io/calico/charts"
    - name: Install Calico
      ansible.builtin.shell:
        cmd: "helm install calico projectcalico/tigera-operator --version v3.25.0 --namespace tigera-operator"
    - name: Configure kubectl alias
      ansible.builtin.lineinfile:
        path: "$HOME/.bashrc"
        search_string: "#alias l='ls -CF'"
        line: "alias k='kubectl'"
        state: present
    - name: install nfs server
      ansible.builtin.shell:
        cmd: "helm install nfs-server stable/nfs-server-provisioner"
    - name: activate autocomplete
      ansible.builtin.lineinfile:
        path: "$HOME/.bashrc"
        line: "source <(kubectl completion bash)"
        state: present
    - name: activate autocomplete for alias
      ansible.builtin.lineinfile:
        path: "$HOME/.bashrc"
        line: "complete -o default -F __start_kubectl k"
        state: present



